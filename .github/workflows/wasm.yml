name: WASM Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://registry.npmjs.org'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown, wasm32-wasip1

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Build WASM Package
        run: |
          cd wasm
          npm install
          npm run build

      - name: Build WASI Package
        run: |
          cargo build --target wasm32-wasip1 --features wasm --release
          mkdir -p wasi-build
          cp target/wasm32-wasip1/release/bytes-radar.wasm wasi-build/
          cp wasm/README.md wasi-build/
          cd wasi-build
          tar czf ../bytes-radar-wasi.tar.gz .

      - name: Create GitHub Release Assets
        run: |
          cd wasm/dist
          tar czf ../bytes-radar-wasm-web.tar.gz web/
          tar czf ../bytes-radar-wasm-node.tar.gz node/
          cd ..

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            wasm/bytes-radar-wasm-web.tar.gz
            wasm/bytes-radar-wasm-node.tar.gz
            bytes-radar-wasi.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to npm
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd wasm
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} 