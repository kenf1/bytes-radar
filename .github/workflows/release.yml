name: Release

on:
  push:
    tags:
      - "v*.*.*"

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  build-release:
    name: Build Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            asset_name: bradar-linux-x86_64
            binary_name: bradar
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            asset_name: bradar-linux-aarch64
            binary_name: bradar
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            asset_name: bradar-windows-x86_64.exe
            binary_name: bradar.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            asset_name: bradar-macos-x86_64
            binary_name: bradar
          - os: macos-latest
            target: aarch64-apple-darwin
            asset_name: bradar-macos-aarch64
            binary_name: bradar

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross (for Linux ARM64)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: cargo install cross

      - name: Build release
        run: |
          if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
            cross build --release --target ${{ matrix.target }}
          else
            cargo build --release --target ${{ matrix.target }}
          fi
        shell: bash

      - name: Rename binary for release
        run: |
          mkdir -p release-assets
          cp target/${{ matrix.target }}/release/${{ matrix.binary_name }} release-assets/${{ matrix.asset_name }}
        shell: bash

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v2
        with:
          files: release-assets/${{ matrix.asset_name }}

  publish-crate:
    name: Publish to crates.io
    needs: build-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Publish to crates.io
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
